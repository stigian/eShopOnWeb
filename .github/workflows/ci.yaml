name: Archimedes - Dotnet

on:
  push:
  pull_request:
    types: [opened]
    branches: [main]
  workflow_dispatch:

# Concurrency settings will cancel any in-progress run if new code is pushed.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env: # TODO: move these from workflow level to job level as appropriate
  dockerfile-path: './src/PublicApi/Dockerfile' # TODO: developer input, set based on manifest file
  target-url: 'http://localhost:80' # TODO: developer input, set based on manifest file
  image-name: 'publicapi' # TODO: developer input, set based on manifest file
  container-port: '5200'

jobs:

  # TODO: Add a job to read the manifest file and set environment variables
  # prepare_env:
  #   name: Prepare Environment
  #   runs-on: ubuntu-latest
  #   outputs:
  #     manifest: ${{ steps.read_manifest.outputs.content }}

  #   steps:
  #     - name: Checkout This Repository
  #       uses: actions/checkout@v4

  #     - name: Read Manifest File
  #       id: read_manifest
  #       shell: bash
  #       run:
  #         echo "Reading manifest file..."
  #         content=$(yq eval -o=json '.[]' manifest.yml)
  #         echo "manifest=$content" >> $GITHUB_OUTPUT


  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout This Repository
        uses: actions/checkout@v4

      # TODO: This step is not required if the composite actions are in a public
      # repository. Adjust accordingly once the composite actions are public.
      - name: Checkout Archimedes Repository
        uses: actions/checkout@v4
        with:
          repository: stigian/archimedes-workflows-dotnet
          ref: init # Branch, tag, or SHA
          path: ./composite
          token: ${{ secrets.ACTIONS_PAT }}

      - name: Build and Test
        uses: ./composite/.github/actions/build-and-test
        with:
          # dotnet-version: '8.0' # Developer must specify versions in global.json
          global-json-path: './global.json'
          sln-path: './eShopOnWeb.sln'

  sast:
    name: SAST
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout This Repository
        uses: actions/checkout@v4

      # TODO: This step is not required if the composite actions are in a public
      # repository. Adjust accordingly once the composite actions are public.
      - name: Checkout Archimedes Repository
        uses: actions/checkout@v4
        with:
          repository: stigian/archimedes-workflows-dotnet
          ref: init
          path: ./composite
          token: ${{ secrets.ACTIONS_PAT }}

      - name: Static Application Security Test
        uses: ./composite/.github/actions/sast
        with:
          languages: 'csharp'
          source-path: './src'
          fail-on-findings: 'false' # TODO: set based on environment, or dev input

  image_scan:
    # needs: [build_and_test, sast]
    name: Image Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read # useful in case we want to pull an image from GHCR
      security-events: write
      # id-token: write # not required until sign_and_sbom

    # Composite action scans one image at a time, so we can use a matrix in the caller workflow
    # to scan multiple images in parallel.
    # TODO: figure out how to handle multiple dockerfile-paths and image name relationships
    strategy:
      matrix: # TODO: developer input, set according to manifest file
        include:
          - image-name: 'eshoppublicapi'
            dockerfile-path: './src/PublicApi/Dockerfile'
          - image-name: 'eshopwebmvc'
            dockerfile-path: './src/Web/Dockerfile'

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      # TODO: This step is not required if the composite actions are in a public
      # repository. Adjust accordingly once the composite actions are public.
      - name: Checkout Archimedes Repository
        uses: actions/checkout@v4
        with:
          repository: stigian/archimedes-workflows-dotnet
          ref: init
          path: ./composite
          token: ${{ secrets.ACTIONS_PAT }}

    #   # # Todo: not required unless push: true in build-push-action
    #   # - name: Login to ghcr.io
    #   #   uses: docker/login-action@v3
    #   #   with:
    #   #     registry: ghcr.io
    #   #     username: ${{ github.actor }}
    #   #     password: ${{ secrets.GITHUB_TOKEN }}

    #   - name: Convert Image Name to Lowercase
    #     id: lowercase
    #     run: echo "IMAGE_NAME=$(echo "${{ github.repository }}/${{ matrix.image }}" | awk '{print tolower($0)}')" >> $GITHUB_OUTPUT

      - name: Scan Container Image
        uses: ./composite/.github/actions/image-scan
        with:
          dockerfile-path: ${{ matrix.dockerfile-path }} # TODO: developer input, set based on manifest file
          image-name: ${{ matrix.image-name }} # TODO: developer input, set based on manifest file
          # image-tag: 'latest'
          # fail-on-findings: 'true'
          # severity-displayed: 'CRITICAL'
          # ignore-path: './.trivyignore'

  dast:
    needs: [image_scan]
    if: success() # Only run DAST if image scan passes
    name: DAST
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    strategy:
      matrix: # TODO: developer input, set according to manifest file
        include:
          - image-name: 'eshopwebmvc'
            target-url: 'http://localhost:5106'
            host-port: '5106'
            container-port: '8080'
            startup-time: '30'
          - image-name: 'eshoppublicapi'
            target-url: 'http://localhost:5200'
            host-port: '5200'
            container-port: '8080'
            startup-time: '30'

    steps:

      - name: Checkout This Repository
        uses: actions/checkout@v4

      # TODO: This step is not required if the composite actions are in a public
      # repository. Adjust accordingly once the composite actions are public.
      - name: Checkout Archimedes Repository
        uses: actions/checkout@v4
        with:
          repository: stigian/archimedes-workflows-dotnet
          ref: init
          path: ./composite
          token: ${{ secrets.ACTIONS_PAT }}

      # Documentation:
      #   - docker-compose-path: the repo path to the docker-compose.yml file, default is ./docker-compose.yml
      #   - target-url: the URL where the container is listening, format http://localhost:{host-port}/{path}
      #   - image-name: friendly name of the image to scan, no effect on image publishing
      #   - host-port: the port the host should listen on, 1024 to 65535, default is 8080
      #   - container-port: the port the container is listening on
      #   - fail-on-findings: whether to fail the action if findings are found, default is false
      #   - startup-time: time in seconds to wait for the container to start
      - name: Dynamic Application Security Test
        uses: ./composite/.github/actions/dast
        with:
          docker-compose-path: './docker-compose.yml'
          target-url: ${{ matrix.target-url }}
          image-name: ${{ matrix.image-name }} # TODO: developer input, set based on manifest file
          host-port: ${{ matrix.host-port}} # TODO: developer input, set based on manifest file
          container-port: ${{ matrix.container-port }} # TODO: developer input, set based on manifest file, mapped to port 80 on the runner
          fail-on-findings: 'false' # TODO: select based on deployment env (prod vs dev)
          startup-time: ${{ matrix.startup-time }} # Time in seconds to wait for the container to start

  publish:
    needs: [sast,dast]
    if: success() # Only publish if SAST and DAST pass
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token
      attestations: write
    strategy:
      matrix: # TODO: developer input, set according to manifest file
        include:
          - image-name: 'eshoppublicapi'
            dockerfile-path: './src/PublicApi/Dockerfile'
          - image-name: 'eshopwebmvc'
            dockerfile-path: './src/Web/Dockerfile'

    steps:

      - name: Checkout This Repository
        uses: actions/checkout@v4

      # TODO: This step is not required if the composite actions are in a public
      # repository. Adjust accordingly once the composite actions are public.
      - name: Checkout Archimedes Repository
        uses: actions/checkout@v4
        with:
          repository: stigian/archimedes-workflows-dotnet
          ref: init
          path: ./composite
          token: ${{ secrets.ACTIONS_PAT }}

      - name: Publish Image
        uses: ./composite/.github/actions/publish
        with:
          dockerfile-path: ${{ matrix.dockerfile-path }} # TODO: developer input, set based on manifest file
          docker-build-context: '.' # TODO: developer input, set based on manifest file
          image-name: ${{ matrix.image-name }} # TODO: developer input, set based on manifest file
          token: ${{ secrets.GITHUB_TOKEN }}

  # GitHub Environment should be configured for manual checks and approvals
  deliver:
    needs: [publish]
    name: Copy Image to Private Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read  # needed to pull image from GHCR
      id-token: write # needed to access the GitHub OIDC token
    env: # TODO: receive from manifest file? Actions secrets? TBD
      AWS_REGION: us-gov-west-1
      AWS_ROLE: arn:aws-us-gov:iam::348600370629:role/github-actions-ecr-role
    strategy:
      matrix: # TODO: developer input, set according to manifest file
        include:
          - image-name: 'eshoppublicapi'
            dockerfile-path: './src/PublicApi/Dockerfile'
          - image-name: 'eshopwebmvc'
            dockerfile-path: './src/Web/Dockerfile'

    steps:
      - name: Checkout This Repository
        uses: actions/checkout@v4

      # TODO: This step is not required if the composite actions are in a public
      # repository. Adjust accordingly once the composite actions are public.
      - name: Checkout Archimedes Repository
        uses: actions/checkout@v4
        with:
          repository: stigian/archimedes-workflows-dotnet
          ref: init
          path: ./composite
          token: ${{ secrets.ACTIONS_PAT }}

      - name: Deliver Image
        uses: ./composite/.github/actions/deliver
        with:
          aws-account-id: '348600370629' # TODO: developer input, set based on manifest file
          aws-region: 'us-gov-west-1' # TODO: developer input, set based on manifest file
          aws-role-arn: ${{ env.AWS_ROLE }} # TODO: developer input, set based on manifest file
          token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile-path: ${{ matrix.dockerfile-path }} # TODO: developer input, set based on manifest file
          docker-build-context: '.' # TODO: developer input, set based on manifest file
          image-name: ${{ matrix.image-name }} # TODO: developer input, set based on manifest file

  # TODO: the final stage that takes the job to the actual compute environment
  # deploy: